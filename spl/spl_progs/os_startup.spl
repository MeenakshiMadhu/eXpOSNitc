//boot module (module 7)
loadi(54,67);
loadi(55,68);
//idle process
loadi(69,11);
loadi(70,12);

SP = 82 * 512 - 1;

//Calling module 7
call BOOT_MODULE;

//IDLE PROCESS

//Setting up page table entries
PTBR = PAGE_TABLE_BASE;
PTLR = 10;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";
//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";
//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//Initializing process table entry

// PID
[PROCESS_TABLE+1] = 0;
// STATE
[PROCESS_TABLE+4] = RUNNING;
// User area page number
[PROCESS_TABLE+11] = 82;
// KPTR
[PROCESS_TABLE+12] = 0;
// UPTR
// UPTR will save userSP(logical pages 8-9) value while switching to Kernel mode
[PROCESS_TABLE+13] = 8*512;
[PROCESS_TABLE+14] = PTBR;
[PROCESS_TABLE+15] = PTLR;

//PID of currently executing process
[SYSTEM_STATUS_TABLE+1] = 0;

// Storing entry point value (second word in code header) to top of user stack
[81*512] = [69*512 + 1];

//Setting SP to logical address of user stack
SP = 8*512;

//Switching to user mode
ireturn;