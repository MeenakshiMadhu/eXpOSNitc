// breakpoint;

//Storing SP value in UPTR
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE+1] * 16) +13] = SP;

//Setting SP value to beginning of Kernel Stack = UArea Page number * 512 - 1
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE+1] * 16) +11] * 512 - 1;

//Save user context to kernel Stack
backup;

// print "TIMER";
// print [SYSTEM_STATUS_TABLE+1];

// Fetching PID of current process
alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE+1];

// Updating STATE in process table entry for current process
[PROCESS_TABLE + currentPID * 16 + 4] = READY;


// Increment TICK value of all processes
alias ctr R1;
ctr = 0;
while(ctr < 16) do
    [PROCESS_TABLE + ctr*16] = [PROCESS_TABLE + ctr*16] + 1;
    ctr = ctr + 1;
endwhile;


call CONTEXT_SWITCH;


//Restore user contextfrom kernel stack, set SP back to user process SP
restore;
SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE+1] * 16) +13];

// Setting MODE flag to 0
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE+1] * 16) +9] = 0;

// breakpoint;

//switch back to User mode
ireturn;